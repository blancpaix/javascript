2-4 큐를 통한 안정적인 메시지 전달
  메시징 시스템, 중요한 추상화 = 메시징 큐 (MQ)
  대기열 사용 하면 동시 활성화, 연결될 필요가 없음
  수신 대상이 수신할때까지 메시지 저장
  발사후 망각 패러다임과 반대 (fire and forget)

  모든 메시지를 수신하지 ㅇ낳을때 보낸 메시지를 항상 안정적으로 수신할 수있는 구독자 = 영구 구독자 (durable subscriber)

  전달의 의미 = 3가지 범주로 요약 가능
  ==영구 가입자 없음
  - 최대 한번 : 실행후 삭제, 메시지 전달이 확인되지 않음, 수신이 끊길경우 메시지 손실 가능
  == 영구 가입자 존재, 메시지를 쌓아 놓아야 함. 큐는 메모리나 디스크에 유지, 장애 발생에도 메시지 복구가 가능해야 함
  - 적어도 한번 : 한번이상 토콜, 수신 보장, 발신자에게 수신을 알리기전에 수신자가 충돌하는 경우 중복 발생 가능
  - 정확히 한번 : 가장 안정적인 전달, 한번만 수신되도록 보장, 느리고 데이터 집약적 메커니즘 수반

  완전히 유일한 패턴은 아님

  구현을 위해 프로토콜인 aMQP 에 대해 알아볼거임

= AMQP 소개
  메시지큐 : 은행시스템, 항공 교통 관리 및 제어 시스템, 의료 어플 등 미션 크리티컬 어플 등 메시지 손실되면 안되는 상황에 사용
  엔터프라이즈급 메시지 큐 = 방탄 프로토콜, 영구 저장소 활용하는 매우 복잡한 소프트웨어

  AMQP 는 많은 메시지 대기열 시스템에서 지원, 개방형 표준 프로토콜
  라우팅, 필터링, 큐인, 안정성 및 보안이 적용된 모델 제공
  
  세가지 필수 컴포넌트 : 브로커 [큐, 익스체인지, 바인딩]
    -큐         : 자료 저장하는곳, 여러 소비자가 동일한 대기열에 연결된 경우 메시지간 로드밸런싱 이뤄짐
      =영구     : 브로커 다시 시작시 대기열 자동 생성, 내용이 영구 보존은 아니고 지속성으로 표시된 메시지만 디스크에 저장되고 복원됨
      =독점     : 특정 가입자 연결에만 바인딩, 연결 닫히면 큐 삭제
      =자동삭제 : 연결끊으면 큐 삭제
    -익스체인지  : 메시지가 게시되는곳, 구현하는 알고리듬에 따라 메시지를 하나이상의 큐로 라우팅
      =다이렉트 익스체인지  : 전체 라우팅키 chat.msg 를 일치시켜 메시지 라우팅함
      =토픽 익스체인지    : 라우팅 키와 일치하는 glob-like 패턴을 사용, 메시지 배포 (chat.*)
      =팬아웃 익스체인지  : 제공된 라우팅 키 무시, 연결된 모든 대기열에 메시지를 브로드캐스트함
    -바인딩     : 익스체인지와 큐 사이의 링크, 메시지를 필터링하는데 사용되는 라우팅 키 또는 패턴을 정의

  브로커에 연결할때 클라이언트는 브로커와 통신상태를 유짛나느 역할을 하는 연결을 추상화한 채널을 만듦
  AMQP 모델은 redis, zeromq 모다 복잡함
  그러나 기본 pub/sub 메커니즘 사용, 신뢰성 수준을 제공

= AMQP 및  RabbitMQ 를 사용하는 영구 구독자
  메시지를 일지않는것이 중요한 일반적인 시나리오, MSA 동기화 상태로 유지하는 경우
  브로커를 통해 일관성 유지

= 채팅 어플에 대한 히스토리 서비스 설계
  MSA 접근 방식으로 소규모 채팅 어플 확장
  클라이언트 연결될때 서비스 질의, 전체 채팅 기록 검색 => DB 에서 채팅 멧지 유지하는 히스토리 서비스 추가
  rabbitMQ의 AMQP 사용, 히스토리 서비스를 채팅 서버와 통합할거임

  구조는 이미지 참조 13.13

  팬아웃 익스체인지 : 연결된 모든곳에 메시지 전송
  오프라인 시 놓친 메시지 수신 X, 독점 유형의 큐
  히스토리는 모두 수신
  채팅 서버가 영구 가입자가 아님 => 연결 종료 즉시 큐가 제거됨
  히스토리 서비스는 메시지를 잃어버리지 않음
  히스토리 서비스의 큐는 내구성이 있어야 함, 연결 해제된 동안 쌓인 메시지가 온라인상태가 되면 전달해야 함


== 사용 라이브러리
amqplib
monotonic-timestamp
level
JSONStream


여기서 확인한것으로는 마이크로서비스 접근방식으로 컴포넌트 중 하나가 동작을 안해도 나머지 기능은 잘 작동한다!

일시적인 기능... (사용가능한 채팅 기록이 남아있지 않음) 은 문제가 될 수있겠지만 뭐 그래도 괜찮아 ㅎㅎㅎ
